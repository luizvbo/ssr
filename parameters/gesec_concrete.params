# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = koza.params


# Stolen from koza/params -- overwriting just
# a little for readability
# You need to create at least one function set, 
# called "f0", which your first tree will use.  

gp.fs.size = 1
gp.fs.0.name = f0
# O default é 10, mas como não queremos ERC, colocamos 9 operadores
gp.fs.0.size = 13
gp.fs.0.func.0 = ec.ssr.functions.X01
gp.fs.0.func.0.nc = nc0
gp.fs.0.func.1 = ec.ssr.functions.X02
gp.fs.0.func.1.nc = nc0
gp.fs.0.func.2 = ec.ssr.functions.X03
gp.fs.0.func.2.nc = nc0
gp.fs.0.func.3 = ec.ssr.functions.X04
gp.fs.0.func.3.nc = nc0
gp.fs.0.func.4 = ec.ssr.functions.X05
gp.fs.0.func.4.nc = nc0
gp.fs.0.func.5 = ec.ssr.functions.X06
gp.fs.0.func.5.nc = nc0
gp.fs.0.func.6 = ec.ssr.functions.X07
gp.fs.0.func.6.nc = nc0
gp.fs.0.func.7 = ec.ssr.functions.X08
gp.fs.0.func.7.nc = nc0
gp.fs.0.func.8 = ec.ssr.functions.Add
gp.fs.0.func.8.nc = nc2
gp.fs.0.func.9 = ec.ssr.functions.Mul
gp.fs.0.func.9.nc = nc2
gp.fs.0.func.10 = ec.ssr.functions.Sub
gp.fs.0.func.10.nc = nc2
gp.fs.0.func.11 = ec.ssr.functions.Div
gp.fs.0.func.11.nc = nc2
gp.fs.0.func.12 = ec.ssr.functions.RegERC
gp.fs.0.func.12.nc = nc0
#gp.fs.0.func.13 = ec.ssr.functions.Exp
#gp.fs.0.func.13.nc = nc1

#gp.fs.0.func.4.nc = nc2
#gp.fs.0.func.5 = ec.app.regression.func.Sin
#gp.fs.0.func.5.nc = nc1
#gp.fs.0.func.6 = ec.app.regression.func.Cos
#gp.fs.0.func.6.nc = nc1
#gp.fs.0.func.8 = ec.app.regression.func.Log
#gp.fs.0.func.8.nc = nc1
# placed here at the bottom so noerc.params can skip it
#gp.fs.0.func.9 = ec.app.regression.func.RegERC
#gp.fs.0.func.9.nc = nc0

pop.subpop.0.species.pipe.num-sources = 2
pop.subpop.0.species.pipe.source.0 = ec.gp.koza.CrossoverPipeline
pop.subpop.0.species.pipe.source.0.prob = 0.9
#pop.subpop.0.species.pipe.source.1 = ec.breed.ReproductionPipeline
#pop.subpop.0.species.pipe.source.1.prob = 0.1
pop.subpop.0.species.pipe.source.1 = ec.gp.koza.MutationPipeline
pop.subpop.0.species.pipe.source.1.prob = 0.1

#
# We specify our problem here
#
eval.problem.data = ec.app.regression.RegressionData

gp.tree.print-style = c
#Para imprimir em .dot para visualizar no GraphViz
#gp.tree.print-style = dot

stat.gather-full = true

# Default = 1024
generations =							200

pop.subpop.0.size =                     200

# Default = 7 
# 1024/7, 500/5
select.tournament.size =                5


eval.problem = 							ec.ssr.problems.Regression

# Overwrite fitness option
# pop.subpop.0.species.fitness = 			ec.ssr.problems.fitness.DoubleKozaFitness

### Don't show best individual information on screen
stat.do-message = 						true

# Elitism size = 1
breed.elite.0 =							1




