# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = koza.params


# Stolen from koza/params -- overwriting just
# a little for readability
# You need to create at least one function set, 
# called "f0", which your first tree will use.  

gp.fs.size = 1
gp.fs.0.name = f0
# O default é 10, mas como não queremos ERC, colocamos 9 operadores
gp.fs.0.size = 5 
gp.fs.0.func.0 = ec.gesec.functions.X01
gp.fs.0.func.0.nc = nc0
gp.fs.0.func.1 = ec.gesec.functions.Add
gp.fs.0.func.1.nc = nc2
gp.fs.0.func.2 = ec.gesec.functions.Mul
gp.fs.0.func.2.nc = nc2
gp.fs.0.func.3 = ec.gesec.functions.Sub
gp.fs.0.func.3.nc = nc2
gp.fs.0.func.4 = ec.gesec.functions.RegERC
gp.fs.0.func.4.nc = nc0

#gp.fs.0.func.6 = ec.app.regression.func.Exp
#gp.fs.0.func.6.nc = nc1

#gp.fs.0.func.4.nc = nc2
#gp.fs.0.func.5 = ec.app.regression.func.Sin
#gp.fs.0.func.5.nc = nc1
#gp.fs.0.func.6 = ec.app.regression.func.Cos
#gp.fs.0.func.6.nc = nc1
#gp.fs.0.func.8 = ec.app.regression.func.Log
#gp.fs.0.func.8.nc = nc1
# placed here at the bottom so noerc.params can skip it
#gp.fs.0.func.9 = ec.app.regression.func.RegERC
#gp.fs.0.func.9.nc = nc0


#
# We specify our problem here
#
eval.problem.data = ec.app.regression.RegressionData

gp.tree.print-style = c
#Para imprimir em .dot para visualizar no GraphViz
#gp.tree.print-style = dot

stat.gather-full = true

# Default = 1024
pop.subpop.0.size =                     5
#pop.subpop.0.size =                     100
generations =							10
#generations =							25

# Default = 7 
# 1024/7, 500/5
select.tournament.size =                2
#select.tournament.size =                3

eval.problem = ec.gesec.problems.Regression

### Don't show best individual information on screen
#stat.do-message = false

# Elitism size = 1
breed.elite.0 =							1
